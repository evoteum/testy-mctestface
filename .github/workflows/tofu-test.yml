name: apply_tofu

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: write
  actions: write

env:
  TF_VAR_org_name: ${{ github.repository_owner }}
  TF_VAR_repo_name: ${{ github.event.repository.name }}
  TF_VAR_repo_url: ${{ github.event.repository.html_url }}
  TF_VAR_aws_region: ${{ vars.AWS_REGION }}
  GITHUB_APP_ID: ${{ secrets.EVOTEUMBOT_APP_ID }}
  GITHUB_APP_INSTALLATION_ID: ${{ secrets.EVOTEUMBOT_APP_INSTALLATION_ID }}
  GITHUB_APP_PEM_FILE: ${{ secrets.EVOTEUMBOT_APP_PEM_FILE }}

jobs:
  apply:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up OpenTofu
      uses: opentofu/setup-opentofu@v1
      with:
        tofu_version: 1.9.0

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        audience: sts.amazonaws.com
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        role-session-name: ${{ github.event.repository.name }}--${{ github.workflow }}--${{ github.run_number }}--${{ github.job }}

    - name: Verify AWS Accessibility
      run: |
        aws sts get-caller-identity >/dev/null && echo "✓ AWS accessible" || echo "✗ AWS not accessible"
        aws s3 ls s3://${{ secrets.TOFU_STATE_BUCKET_NAME }} >/dev/null && echo "✓ S3 state bucket accessible" || (echo "✗ S3 state bucket not accessible" && exit 1)

    - name: Initialize OpenTofu
      id: tofu-init
      run: |
        cd tofu/test
        tofu init \
          -input=false \
          -backend-config="bucket=${{ secrets.TOFU_STATE_BUCKET_NAME }}" \
          -backend-config="key=${{ github.event.repository.name }}/tofu.tfstate" \
          -backend-config="region=${{ vars.AWS_REGION }}"

    - name: Build OpenTofu Plan
      id: tofu-plan
      run: |
        cd tofu/test
        set -o pipefail
        tofu plan -input=false -out=tfplan | tee plan.txt

    - name: Check OpenTofu Plan
      id: tofu-check-plan
      run: |
        cd tofu/test
        tofu show -json tfplan > tfplan.json
        if grep -q "No changes." plan.txt; then
          echo "changes=false" >> $GITHUB_OUTPUT
          exit 0
        fi
        echo "changes=true" >> $GITHUB_OUTPUT
        # Further plan checks will be added here
        

    - name: Apply OpenTofu configuration
      if: steps.tofu-check-plan.outputs.changes == 'true'
      run: |
        cd tofu/test
        echo "Applying OpenTofu configuration"
        tofu apply tfplan
